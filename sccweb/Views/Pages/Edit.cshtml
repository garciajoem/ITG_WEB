@model itgweb.Models.Page
@{
    ViewBag.Title = "Edit";
    var vi = 0;
}
@RenderPage("../Shared/PanelMenu.cshtml")
<div class="panel panel-body page-edit">
    @using (Html.BeginForm("Edit", "Pages", null, FormMethod.Post, new { enctype = "multipart/form-data", @class="form-page form-page-edit" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row form-header">
            <div class="col-sm-6">
                <h4>Edit Page</h4>
            </div>
            <div class="col-sm-6 text-right">
                <a href="@Url.Action("Index")" class="f-back btn btn-default btn-sm">
                    Back to List
                </a>
            </div>
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row form-group form-image">
            @Html.Label("Image header", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-8">
                        @if (ViewBag.Img == true)
                        {
                            <div class="fi fi-data-img">
                                <span class="fdi fdi-remove"><i class="fa fa-times" aria-hidden="true"></i></span>
                                <img class="fdi fdi-img" src="~/Pages/RetrieveImage/@Html.DisplayFor(model => model.Id)" alt="" width="250" />
                            </div>
                        }
                        else
                        {
                            <input type="file" id="upload" name="upload" onchange="fileCheck(this)" />
                        }
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control datepicker" }, type = "date" })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                <p class="small">(max 150 characters)</p>
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row form-group">
            @Html.Label("Enable Summary?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="pub -yes">
                    <span class="pl">Yes</span>
                    @Html.RadioButtonFor(model => model.ShowSum, "1")
                </span>
                <span class="pub -no">
                    <span class="pl">No</span>
                    @Html.RadioButtonFor(model => model.ShowSum, "0")
                </span>


                @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="form-singlecontent" class="form-group form-maintext" style="display:none;" data-content="1">
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="Maintext">Maintext</label>
                    <button class="btn btn-primary btn-sm collapse-hidden" type="button" data-target="#form-multiplecontent" data-parentid="#form-singlecontent" aria-expanded="false" aria-controls="form-multipletext">Accordion</button>
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Maintext, new { rows = "4", @id = "Maintext", @class = "form-control texteditor" })
                    @Html.ValidationMessageFor(model => model.Maintext, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="form-multiplecontent" class="form-group form-multipletext" data-content="0">
            <div class="row">
                <div class="control-label col-md-2">
                    <label for="multipletext">Multiple Content</label>
                    <!--<button class="btn btn-primary btn-sm collapse-hidden" type="button" data-target="#form-singlecontent" data-parentid="#form-multiplecontent" aria-expanded="false" aria-controls="form-multipletext">Maintext</button>-->
                </div>
                <div class="col-md-10">
                    <div class="container-duplicate">
                        @if (ViewBag.Subcontent != null)
                        {
                            foreach (var item in ViewBag.Subcontent)
                            {
                                vi++;
                                if (vi % 2 != 0)
                                {
                                    <div class="fmi fmi-sep fmi-sep-title" data-item="@(vi)">
                                        <input type="text" class="form-control" name="subcontent" placeholder="Add Subtitle" data-subid="1" value="@(item)" />
                                    </div>
                                }
                                else
                                {
                                    var dhv = vi - 1;
                                    var countdi = vi / 2;
                                    <div class="fmi fmi-sep fmi-sep-content" data-item="@(dhv)" data-length="@(countdi)">
                                        <textarea id="textEditor@(vi)" class="form-control fmi fmi-content texteditor" name="subcontent" data-conid="1" rows="4" placeholder="Add Subcontent">@(item)</textarea>
                                        <p class="text-right" style="margin: 0; margin-top: 10px;">
                                            <span class="btn btn-sm btn-danger btn-remove-fmisep" data-remove="@(dhv)">Remove</span>
                                        </p>
                                    </div>
                                }
                            }
                        }
                    </div>
                    <button type="button" class="btn btn-success btn-sm btn-duplicate" data-container=".container-duplicate"><i class="fa fa-plus" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="pub -yes">
                    <span class="pl">Yes</span>
                    @Html.RadioButtonFor(model => model.Publish, "1")
                </span>
                <span class="pub -no">
                    <span class="pl">No</span>
                    @Html.RadioButtonFor(model => model.Publish, "0")
                </span>


                @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="adv-set" class="collapse multi-collapse">
            <div class="row form-group">
                @Html.LabelFor(model => model.MetaKeywords, "Meta Keywords", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.MetaDescription, "Meta Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row form-group">
                @Html.LabelFor(model => model.AuthorId, "Author", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row form-group">
                @Html.LabelFor(model => model.PageUrl, "Page URL", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PageUrl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-2"></div>
            <div class="col-md-offset-2 col-md-10 f-control">
                <input type="submit" value="Save" class="btn btn-success" />
                <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#adv-set" aria-expanded="false" aria-controls="adv-set">Advance</button>
            </div>
        </div>
    </div>
    }
</div>
